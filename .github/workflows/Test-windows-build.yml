name: Build on Windows test

on: 
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-2022
    env: 
        THIRDPARTY_HOME: C:/Users/runneradmin/thirdparty
        CMAKE_HOME: C:/Program Files/CMake
        CMAKE_BIN: C:/Program Files/CMake/bin/cmake.exe
        SNAPPY_HOME: C:/Users/runneradmin/thirdparty/snappy-1.1.8
        SNAPPY_INCLUDE: C:/Users/runneradmin/thirdparty/snappy-1.1.8;C:/Users/circleci/thirdparty/snappy-1.1.8/build
        SNAPPY_LIB_DEBUG: C:/Users/runneradmin/thirdparty/snappy-1.1.8/build/Debug/snappy.lib
        CMAKE_GENERATOR: Visual Studio 17 2022
        CODE_HOME: C:/Users/runneradmin/code
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '8'
        
      #- name: update the PATH
      #  run: |
      #    echo "C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Current\Bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append    
        
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1    

      - name: Setup VS Dev
        uses: seanmiddleditch/gha-setup-vsdevenv@master

      - name: install snappy test
        shell: powershell
        run: |
            echo $env:CODE_HOME
            dir C:/Users/
            dir C:/Users/runneradmin
            mkdir $env:CODE_HOME
            cd $env:CODE_HOME
            curl https://github.com/google/snappy/archive/refs/tags/1.1.9.zip -o 1.1.9.zip
            echo "dir 11"
            dir
            Expand-Archive -Path 1.1.9.zip -DestinationPath snappy-tmp
            echo "dir 22"
            dir
            echo "dir 33"
            dir snappy-tmp 
            mv .\snappy-tmp\snappy-1.1.9\ .
            rmdir .\snappy-tmp\
            cd .\snappy-1.1.9\
            mkdir build
            cd .\build\
            cmake -G "Visual Studio 17 2022" -A x64 -DCMAKE_GENERATOR_PLATFORM=x64 -DSNAPPY_BUILD_TESTS=OFF -DSNAPPY_BUILD_BENCHMARKS=OFF ..
            msbuild Snappy.sln /p:Configuration=Debug /p:Platform=x64
            msbuild Snappy.sln /p:Configuration=Release /p:Platform=x64        
            echo "list build dir"
            dir C:\Users\runneradmin\code\snappy-1.1.9\build\
            echo "list parent dir"
            dir C:\Users\runneradmin\code\snappy-1.1.9\


      - name: install cmake 
        shell: powershell
        run: |                  
            echo "Installing CMake..."
            choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y

      - name: prepare Thirdparty home
        shell: powershell
        run: mkdir "$Env:THIRDPARTY_HOME"

      - name: install snappy
        shell: powershell
        run: |      
            cd $Env:THIRDPARTY_HOME
            echo "Building Snappy dependency..."
            curl https://github.com/google/snappy/archive/refs/tags/1.1.8.zip -O snappy-1.1.8.zip
            unzip -q snappy-1.1.8.zip
            cd snappy-1.1.8
            mkdir build
            cd build
            & $Env:CMAKE_BIN -G "$Env:CMAKE_GENERATOR" ..                        
            echo "show path"
            echo $Env:Path
            echo "list files"
            #     dir C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Current\Bin
            echo "run msbuild"
            msbuild.exe Snappy.sln -maxCpuCount -property:Configuration=Debug -property:Platform=x64
            msbuild.exe Snappy.sln -maxCpuCount -property:Configuration=Release -property:Platform=x64
            echo "checking for snappy.h"
            dir C:\Users\runneradmin\thirdparty\snappy-1.1.8\
            echo "listing the build folder"
            dir C:\Users\runneradmin\thirdparty\snappy-1.1.8\build
            echo "listing the file"
            dir C:\Users\runneradmin\thirdparty\snappy-1.1.8\snappy.h

      - name: install zlib
        shell: powershell
        run: |    
            cd $Env:THIRDPARTY_HOME
            curl   https://zlib.net/zlib13.zip -o  zlib13.zip
            Expand-Archive -Path zlib13.zip -DestinationPath zlib-tmp
            mv .\zlib-tmp\zlib-1.3\ .
            rmdir zlib-tmp
            cd zlib-1.3\contrib\vstudio\vc14
            devenv zlibvc.sln /upgrade
            cp ../../../zlib.h .
            msbuild zlibvc.sln /p:Configuration=Debug /p:Platform=x64
            msbuild zlibvc.sln /p:Configuration=Release /p:Platform=x64
            copy x64\ZlibDllRelease\zlibwapi.lib x64\ZlibStatRelease\

      - name: install lz4
        shell: powershell
        run: |    
            cd $Env:THIRDPARTY_HOME
            curl https://github.com/lz4/lz4/archive/refs/tags/v1.9.2.zip -o lz4.zip
            Expand-Archive -Path lz4.zip -DestinationPath lz4-tmp
            mv .\lz4-tmp\lz4-1.9.2\ .
            rmdir .\lz4-tmp\
            cd .\lz4-1.9.2\
            cd visual\VS2017
            devenv lz4.sln /upgrade
            msbuild lz4.sln /p:Configuration=Release /p:Platform=x64

      - name: install zctd
        shell: powershell
        run: |
            cd $Env:THIRDPARTY_HOME
            curl   https://github.com/facebook/zstd/archive/v1.5.2.zip -o zstd-tmp.zip
            Expand-Archive -Path zstd-tmp.zip -DestinationPath zstd-tmp
            mv .\zstd-tmp\zstd-1.5.2\ .
            rmdir .\zstd-tmp\
            cd zstd-1.5.2\build\VS2010
            devenv zstd.sln /upgrade
            msbuild zstd.sln /p:Configuration=Debug /p:Platform=x64
            msbuild zstd.sln /p:Configuration=Release /p:Platform=x64

      - name: install gflags
        shell: powershell
        run: |
            cd $Env:THIRDPARTY_HOME
            curl https://github.com/gflags/gflags/archive/refs/tags/v2.2.2.zip -o v2.2.2.zip
            Expand-Archive -Path .\v2.2.2.zip -DestinationPath gflags-2.2.2
            cd .\gflags-2.2.2\
            mkdir target
            cd target
            cmake -G "Visual Studio 17 2022" -A x64 ..
            msbuild gflags.sln /p:Configuration=Release /p:Platform=x64

    
      - name: "Build Speedb"      
        run: |
            echo "listing the snappy.h"
            dir C:\Users\runneradmin\thirdparty\snappy-1.1.8\snappy.h
            copy C:\Users\runneradmin\thirdparty\snappy-1.1.8\build\snappy-stubs-public.h C:\Users\runneradmin\thirdparty\snappy-1.1.8\ 
            echo "list zlib folder C:\Users\runneradmin\thirdparty\zlib-1.3"
            dir C:\Users\runneradmin\thirdparty\zlib-1.3
            mkdir build
            cd build
            #& $Env:CMAKE_BIN -G "$Env:CMAKE_GENERATOR" -DCMAKE_BUILD_TYPE=Debug -DOPTDBG=1 -DPORTABLE=1 -DSNAPPY=1 -DJNI=1 ..
            & $Env:CMAKE_BIN -G "$Env:CMAKE_GENERATOR" -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_STANDARD=20 -A x64 -DJNI=1 -DGFLAGS=1 -DOPTDBG=1 -DPORTABLE=1 -DSNAPPY=1 -DJNI=1 -DSNAPPY=1 -DLZ4=1 -DZLIB=1 -DZSTD=1 -DXPRESS=1 -DFAIL_ON_WARNINGS=0 ..
            cd ..
            echo "Building with VS version: $Env:CMAKE_GENERATOR"
            msbuild build/speedb.sln /p:Configuration=Release /t:speedbjni-shared
            #msbuild.exe build/rocksdb.sln -maxCpuCount -property:Configuration=Debug -property:Platform=x64
            #msbuild.exe build/speedb.sln -maxCpuCount -property:Configuration=Debug -property:Platform=x64
     
      - name: Test RocksDB
        shell: powershell
        run: |          
          build_tools\run_ci_db_test.ps1 -SuiteRun arena_test,db_basic_test,db_test,db_test2,db_merge_operand_test,bloom_test,c_test,coding_test,crc32c_test,dynamic_bloom_test,env_basic_test,env_test,hash_test,random_test -Concurrency 16
